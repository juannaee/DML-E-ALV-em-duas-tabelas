REPORT zhr_report_al16.

*Campos da tabela:
* Nome da tabela : ZHR002_16
*
*ZZ_CD  Codigo da matricula.
*ZZ_NOME_AL Nome Aluno.
*ZZ_SERIE_AL Serie Aluno.
*ZZ_STATUS_AL Status Ativo ou Inativo Aluno.
*ZZ_DATA_MATRI  Data de matricula.
*ZZ_SEXO_AL   Sexo do Aluno.
*
*Campos da segunda tabela:
*Nome da tabela : ZHR002_2_16
*
*ZZ_CD       Codigo da matricula.
*ZZ_ED       ENDEREÃ‡O
*ZZ_EMAIL_AL EMAIL:
*ZZ_TEL_AL   TELEFONE:
*
*
*

TYPES: BEGIN OF type_dadosal,

         zz_cd         TYPE   zhr002_16-zz_cd,
         zz_nome_al    TYPE   zhr002_16-zz_nome_al,
         zz_serie_al   TYPE   zhr002_16-zz_serie_al,
         zz_status_al  TYPE   zhr002_16-zz_status_al,
         zz_data_matri TYPE   zhr002_16-zz_data_matri,
         zz_sexo_al    TYPE   zhr002_16-zz_sexo_al,
         zz_ed         TYPE zhr002_2_16-zz_ed,
         zz_email_al   TYPE zhr002_2_16-zz_email_al,
         zz_tel_al     TYPE zhr002_2_16-zz_tel_al,

       END OF type_dadosal.

DATA:
  t_dadosal  TYPE TABLE OF type_dadosal,
  wa_dadosal LIKE LINE OF t_dadosal,


  t_out      TYPE TABLE OF zsmm_lista_al16.
FIELD-SYMBOLS: <lfs_line> TYPE zsmm_lista_al16.

DATA
     v_cd TYPE zhr002_16-zz_cd.


SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.

SELECT-OPTIONS: s_cd FOR  v_cd.

SELECTION-SCREEN END OF BLOCK b1.



START-OF-SELECTION.

  PERFORM f_busca_dados.
  PERFORM f_exibir_alv.

FORM f_busca_dados .
  SELECT
         zhr002_16~zz_cd
         zhr002_16~zz_nome_al
         zhr002_16~zz_serie_al
         zhr002_16~zz_status_al
         zhr002_16~zz_data_matri
         zhr002_16~zz_sexo_al
         zhr002_2_16~zz_ed
         zhr002_2_16~zz_email_al
         zhr002_2_16~zz_tel_al
    INTO TABLE t_dadosal
    FROM  zhr002_16 INNER JOIN  zhr002_2_16
    ON zhr002_16~zz_cd EQ zhr002_2_16~zz_cd
    WHERE
     zhr002_16~zz_cd IN s_cd.

  IF t_dadosal[] IS INITIAL.
    MESSAGE s208(00) WITH text-m01 DISPLAY LIKE 'E' .
  ENDIF.




  LOOP AT t_dadosal INTO wa_dadosal.

    APPEND INITIAL LINE TO t_out ASSIGNING <lfs_line>.
    MOVE-CORRESPONDING wa_dadosal TO <lfs_line>.



  ENDLOOP.

ENDFORM.



FORM f_exibir_alv .
  DATA:
    t_fieldcat  TYPE slis_t_fieldcat_alv,
    wa_fieldcat LIKE LINE OF t_fieldcat,
    wa_layout   TYPE  slis_layout_alv.


  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZSMM_LISTA_AL16'
      i_client_never_display = abap_true
    CHANGING
      ct_fieldcat            = t_fieldcat
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.


  IF sy-subrc NE 0.
    MESSAGE e208(00) WITH 'ERRO AO GERAR ALV'.
  ENDIF.

  wa_layout-colwidth_optimize = abap_true.
  wa_layout-zebra = abap_true.


  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      is_layout     = wa_layout     "Layout da lv
      it_fieldcat   = t_fieldcat    "Aqui iremos construir nossa lv "manualmente" .
    TABLES
      t_outtab      = t_out
    EXCEPTIONS
      program_error = 1
      OTHERS        = 2.

  IF sy-subrc IS NOT INITIAL.
    MESSAGE e208(00) WITH 'ERRO AO GERAR ALV'.
  ENDIF.



ENDFORM.
